{"version":3,"file":"JBLoading.umd.js","sources":["../lib/JBLoading.js"],"sourcesContent":["import HTML from './JBLoading.html';\r\nimport CSS from './JBLoading.scss';\r\nclass JBLoadingWebComponent extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.initWebComponent();\r\n    }\r\n    connectedCallback() {\r\n        // standard web component event that called when all of dom is binded\r\n        this.callOnLoadEvent();\r\n        this.initProp();\r\n        this.callOnInitEvent();\r\n        \r\n    }\r\n    callOnLoadEvent() {\r\n        var event = new CustomEvent('load', { bubbles: true, composed: true });\r\n        this.dispatchEvent(event);\r\n    }\r\n    callOnInitEvent() {\r\n        var event = new CustomEvent('init', { bubbles: true, composed: true });\r\n        this.dispatchEvent(event);\r\n    }\r\n    initWebComponent() {\r\n        const shadowRoot = this.attachShadow({\r\n            mode: 'open'\r\n        });\r\n        const html = `<style>${CSS}</style>` + '\\n' + HTML;\r\n        const element = document.createElement('template');\r\n        element.innerHTML = html;\r\n        shadowRoot.appendChild(element.content.cloneNode(true));\r\n        this.registerEventListener();\r\n    }\r\n    registerEventListener() {\r\n\r\n    }\r\n    initProp() {\r\n    }\r\n    static get observedAttributes() {\r\n        return ['type'];\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        // do something when an attribute has changed\r\n        this.onAttributeChange(name, newValue);\r\n    }\r\n    onAttributeChange(name, value) {\r\n        switch (name) {\r\n\r\n            case 'type':\r\n                this.inputElement.setAttribute('type', value);\r\n                if (value == \"password\") {\r\n                    this.initPassword();\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n}\r\nconst myElementNotExists = !customElements.get('jb-loading');\r\nif(myElementNotExists){\r\n    window.customElements.define('jb-loading', JBLoadingWebComponent);\r\n}\r\n"],"names":["CSS"],"mappings":";;;;;;;;;IAEA,MAAM,qBAAqB,SAAS,WAAW,CAAC;IAChD,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,EAAE,CAAC;IAChB,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,iBAAiB,GAAG;IACxB;IACA,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC/B,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;IACxB,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;IAC/B;IACA,KAAK;IACL,IAAI,eAAe,GAAG;IACtB,QAAQ,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/E,QAAQ,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClC,KAAK;IACL,IAAI,eAAe,GAAG;IACtB,QAAQ,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/E,QAAQ,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClC,KAAK;IACL,IAAI,gBAAgB,GAAG;IACvB,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;IAC7C,YAAY,IAAI,EAAE,MAAM;IACxB,SAAS,CAAC,CAAC;IACX,QAAQ,MAAM,IAAI,GAAG,CAAC,OAAO,EAAEA,QAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC3D,QAAQ,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC3D,QAAQ,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;IACjC,QAAQ,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACrC,KAAK;IACL,IAAI,qBAAqB,GAAG;AAC5B;IACA,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,KAAK;IACL,IAAI,WAAW,kBAAkB,GAAG;IACpC,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC;IACxB,KAAK;IACL,IAAI,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;IACvD;IACA,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC/C,KAAK;IACL,IAAI,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE;IACnC,QAAQ,QAAQ,IAAI;AACpB;IACA,YAAY,KAAK,MAAM;IACvB,gBAAgB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9D,gBAAgB,IAAI,KAAK,IAAI,UAAU,EAAE;IACzC,oBAAoB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxC,iBAAiB;IACjB,gBAAgB,MAAM;IACtB,SAAS;AACT;IACA,KAAK;IACL,CAAC;IACD,MAAM,kBAAkB,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC7D,GAAG,kBAAkB,CAAC;IACtB,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,EAAE,qBAAqB,CAAC,CAAC;IACtE;;;;;;"}